---
test_name: POST Acceptable Log Level
marks:
  - usefixtures:
      - run_server
  - parametrize:
      key: log_level
      vals:
        - debug
        - info
        - warning
        - error
stages:
  - name: Set log_level to acceptable values 
    request:
      method: POST
      url: "{host:s}:{port:d}/settings/log_level/local"
      json: 
        log_level: "{log_level}"
    response:
      status_code: 200
      json:
        message: "log_level set to {log_level}"
---
# Incorect Log Level Requests
test_name: POST Set log level to invalid value
marks:
  - usefixtures:
      - run_server
stages:
  - name: Set log_level to error 
    request:
      method: POST
      url: "{host:s}:{port:d}/settings/log_level/local"
      json: 
        log_level: bad_level
    response:
      status_code: 422
      json:
        message: "log_level.log_level: '{tavern.request_vars.json.log_level}' is not a valid LogLevels"
---
test_name: POST Set log level to nothing
marks:
  - usefixtures:
      - run_server
stages:
  - name: Set log_level to nothing 
    request:
      method: POST
      url: "{host:s}:{port:d}/settings/log_level/local"
      json: 
        log_level: Null
    response:
      status_code: 422
      json:
        message: "log_level must be set"
